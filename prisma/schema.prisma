// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Emby服务器配置
model EmbyServer {
  id        Int      @id @default(autoincrement())
  remoteId  String // server id
  name      String // custom name
  url       String // 服务器URL
  apiKey    String // API密钥
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 关联
  embyItems EmbyItem[] // Emby服务器上的项目
}

// 本地数据
model LocalItem {
  id            Int       @id @default(autoincrement())
  title         String
  originalTitle String?
  overview      String?
  type          String // 类型（电影/剧集等）
  premiereDate  DateTime?
  externalIds   Json? // 外部ID（如IMDB ID） key-value格式
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  tags      Tag[]
  embyItems EmbyItem[]
  comment   Comment?
  rating    Rating?
}

// 从 Emby 服务器获取的 item 元数据
model EmbyItem {
  id              Int       @id @default(autoincrement())
  localItemId     Int? // 关联的本地项目ID
  embyId          String // Emby内部ID
  embyServerId    Int // 关联的Emby服务器ID
  embyCreateAt    DateTime? // 在 Emby 上的创建时间
  title           String // 标题
  originalTitle   String? // 原始标题
  overview        String? // 简介
  type            String // 类型（电影/剧集等）
  externalIds     Json? // 外部ID（如IMDB ID） key-value 格式
  directors       String? // 导演 （逗号分隔）
  actors          String? // 演员（逗号分隔）
  posterPath      String? // 海报路径
  backdropPath    String? // 背景图路径
  genres          String? // 类型（逗号分隔）
  productionYear  Int? // 制作年份
  dateAdded       DateTime? // 添加日期
  communityRating Float? // 社区评分
  premiereDate    DateTime? // 首播日期
  studios         String? // 制片公司（逗号分隔）
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  embyServer EmbyServer @relation(fields: [embyServerId], references: [id], onDelete: Cascade)
  localItem  LocalItem? @relation(fields: [localItemId], references: [id], onDelete: Cascade)

  @@unique([embyId, embyServerId])
  @@unique([localItemId, embyServerId])
}

// 用户评论
model Comment {
  id          Int      @id @default(autoincrement())
  localItemId Int // 关联的本地项目ID
  content     String // 评论内容
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  localItem LocalItem @relation(fields: [localItemId], references: [id], onDelete: Cascade)

  @@unique([localItemId])
  @@index([localItemId])
}

// 用户标签
model Tag {
  id          Int      @id @default(autoincrement())
  name        String   @unique // 标签名称
  group       String   @default("未分类") // 标签分组
  description String? // 标签描述
  createdAt   DateTime @default(now())

  items LocalItem[]

  @@index([name])
}

// 用户评分
model Rating {
  id          Int      @id @default(autoincrement())
  localItemId Int // 本地项目ID
  score       Float // 分数
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // 关联
  localItem LocalItem @relation(fields: [localItemId], references: [id])

  @@unique([localItemId])
  @@index([localItemId])
}

// 系统配置
model Config {
  id        Int      @id @default(autoincrement())
  key       String   @unique // 配置键，如 "app.theme"
  value     String // 配置值（JSON字符串）
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([key])
}

// 外部链接定义
model ExternalLinkProvider {
  id        Int      @id @default(autoincrement())
  name      String // 显示名称，如 "IMDB"
  key       String   @unique // 外部ID的键，如 "imdb"
  template  String // URL模板，如 "https://www.imdb.com/title/{value}"
  isEnabled Boolean  @default(true) // 是否启用
  order     Int      @default(0) // 显示顺序
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([key])
  @@index([order])
}
